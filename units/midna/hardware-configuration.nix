# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, modulesPath, ... }:

{
	imports = [ (modulesPath + "/installer/scan/not-detected.nix") ];

	boot.initrd.availableKernelModules = [ "xhci_pci" "usb_storage" "sd_mod" "sdhci_pci" ];
	boot.initrd.kernelModules = [ ];
	boot.kernelModules = [ "kvm-intel" ];
	boot.extraModulePackages = [ ];
	boot.kernelParams = [ ];

	fileSystems."/" = {
		device = "/dev/disk/by-uuid/cfe70158-cab3-44eb-822e-183a09ac10de";
		fsType = "ext4";
	};
  boot.initrd.luks.devices."luks-aeb25a6d-b698-4d41-a5be-080ed23a9817".device = "/dev/disk/by-uuid/aeb25a6d-b698-4d41-a5be-080ed23a9817";

	fileSystems."/boot" = {
		device = "/dev/disk/by-uuid/1714-A994";
		fsType = "vfat";
		options = [ "fmask=0022" "dmask=0022" ];
	};

	# Enables DHCP on each ethernet and wireless interface. In case of scripted networking
	# (the default) this is the recommended approach. When using systemd-networkd it's
	# still possible to use this option, but it's recommended to use it in conjunction
	# with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
	networking.useDHCP = lib.mkDefault true;
	# networking.interfaces.wlp0s12f0.useDHCP = lib.mkDefault true;

	nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
	hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
