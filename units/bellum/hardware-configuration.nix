# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, modulesPath, ... }:

{
	imports = [(modulesPath + "/installer/scan/not-detected.nix")];
	boot.initrd.availableKernelModules = [ "mpt3sas" "xhci_pci" "ahci" "nvme" "usbhid" "usb_storage" "sd_mod" ];
	boot.initrd.kernelModules = [ "amdgpu" ];
	boot.kernelModules = [ "kvm-amd" ];
	boot.extraModulePackages = [ ];
	fileSystems."/" = {
		device = "/dev/disk/by-uuid/26833b48-9554-4709-85c1-89110160b348";
		fsType = "ext4";
	};
	fileSystems."/boot" = {
		device = "/dev/disk/by-uuid/5362-62E3";
		fsType = "vfat";
		options = [ "fmask=0077" "dmask=0077" ];
	};
	fileSystems."/var" = {
		device = "/dev/disk/by-uuid/497838fe-2287-47d4-8d1e-2b0851fc8f9d";
		fsType = "ext4";
	};
	fileSystems."/media/bellum/jellyfin" = {
		device = "/dev/disk/by-uuid/8cca9dcc-d96a-4e05-a171-683ecbdc0b13";
		fsType = "ext4";
	};
	swapDevices = [ ];
	# Enables DHCP on each ethernet and wireless interface. In case of scripted networking
	# (the default) this is the recommended approach. When using systemd-networkd it's
	# still possible to use this option, but it's recommended to use it in conjunction
	# with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
	networking.useDHCP = lib.mkDefault true;
	# networking.interfaces.enp10s0.useDHCP = lib.mkDefault true;
	nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
	hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
